name: AWS Infra Deploy v5

on:
  pull_request:
    branches: [ main ]

jobs:
  deploy-api-ec2-prod:
    name: deploy-api-ec2-prod 
    if: contains(github.event.pull_request.labels.*.name, 'deploy-back-api-production')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Deploy to EC2
        env:
          API_EC2_HOST: ${{ secrets.API_EC2_HOST }}
          SSH_KEY: ${{ secrets.API_SSH_PRIVATE_KEY }}
          DEST_PATH: '/home/ubuntu/dl/'
          APP_NAME: 'doughly'
        run: |
          # Install SSH Client (if not present)
          sudo apt-get update
          sudo apt-get install -y openssh-client

          # Setup SSH Key
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          # SSH into the EC2 instance and run commands
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${API_EC2_HOST} << EOF
            # Stop the server using PM2
            pm2 stop ${APP_NAME} || true  # '|| true' to ignore if the app isn't found

            # Clean the directory
            
            if [ -n "${DEST_PATH}" ]; then
              rm -rf ${DEST_PATH}/*
            fi


            # Exit SSH session
          EOF

          # Rsync to EC2
          rsync -avz -e "ssh -i ~/.ssh/id_rsa -o UserKnownHostsFile=~/.ssh/known_hosts" ./server/ ubuntu@${API_EC2_HOST}:${DEST_PATH}

          # SSH into the EC2 instance to restart the server
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${API_EC2_HOST} << EOF
            # Navigate to the directory
            cd ${DEST_PATH}

            # Install dependencies
            npm install

            # Start the server using PM2
            pm2 start server.js --name "${APP_NAME}"

            # Save the PM2 process list to restart on server reboot
            pm2 save

            # Exit SSH session
          EOF



