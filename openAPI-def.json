{
  "openapi": "3.0.0",
  "info": {
    "title": "doughleap",
    "version": "1.0.0"
  },
  "paths": {
    "/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Get all clients",
        "operationId": "getClients",
        "parameters": [
          {
            "name": "clientIDs",
            "in": "query",
            "description": "Comma-separated list of client IDs to filter results by",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "nameFirst",
            "in": "query",
            "description": "Optional first name to filter users by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nameLast",
            "in": "query",
            "description": "Optional last name to filter users by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Optional phone to filter users by",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Optional city to filter users by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Optional city to filter users by",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "zip",
            "in": "query",
            "description": "Optional zip to filter users by",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientID": {
                        "type": "integer"
                      },
                      "nameFirst": {
                        "type": "string"
                      },
                      "nameLast": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      },
                      "address1": {
                        "type": "string"
                      },
                      "address2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "AL",
                          "AK",
                          "AZ",
                          "AR",
                          "AS",
                          "CA",
                          "CO",
                          "CT",
                          "DE",
                          "DC",
                          "FL",
                          "GA",
                          "GU",
                          "HI",
                          "ID",
                          "IL",
                          "IN",
                          "IA",
                          "KS",
                          "KY",
                          "LA",
                          "ME",
                          "MD",
                          "MA",
                          "MI",
                          "MN",
                          "MS",
                          "MO",
                          "MT",
                          "NE",
                          "NV",
                          "NH",
                          "NJ",
                          "NM",
                          "NY",
                          "NC",
                          "ND",
                          "MP",
                          "OH",
                          "OK",
                          "OR",
                          "PA",
                          "PR",
                          "RI",
                          "SC",
                          "SD",
                          "TN",
                          "TX",
                          "TT",
                          "UT",
                          "VT",
                          "VA",
                          "VI",
                          "WA",
                          "WV",
                          "WI",
                          "WY"
                        ]
                      },
                      "zip": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Create a client",
        "operationId": "createClient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nameFirst": {
                    "type": "string"
                  },
                  "nameLast": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "AL",
                      "AK",
                      "AZ",
                      "AR",
                      "AS",
                      "CA",
                      "CO",
                      "CT",
                      "DE",
                      "DC",
                      "FL",
                      "GA",
                      "GU",
                      "HI",
                      "ID",
                      "IL",
                      "IN",
                      "IA",
                      "KS",
                      "KY",
                      "LA",
                      "ME",
                      "MD",
                      "MA",
                      "MI",
                      "MN",
                      "MS",
                      "MO",
                      "MT",
                      "NE",
                      "NV",
                      "NH",
                      "NJ",
                      "NM",
                      "NY",
                      "NC",
                      "ND",
                      "MP",
                      "OH",
                      "OK",
                      "OR",
                      "PA",
                      "PR",
                      "RI",
                      "SC",
                      "SD",
                      "TN",
                      "TX",
                      "TT",
                      "UT",
                      "VT",
                      "VA",
                      "VI",
                      "WA",
                      "WV",
                      "WI",
                      "WY"
                    ]
                  },
                  "address2": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientID": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/clients/{clientID}": {
      "patch": {
        "tags": [
          "Clients"
        ],
        "summary": "Update a client",
        "operationId": "updateClient",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "ID of the client to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nameFirst": {
                    "type": "string"
                  },
                  "nameLast": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "address1": {
                    "type": "string"
                  },
                  "address2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "AL",
                      "AK",
                      "AZ",
                      "AR",
                      "AS",
                      "CA",
                      "CO",
                      "CT",
                      "DE",
                      "DC",
                      "FL",
                      "GA",
                      "GU",
                      "HI",
                      "ID",
                      "IL",
                      "IN",
                      "IA",
                      "KS",
                      "KY",
                      "LA",
                      "ME",
                      "MD",
                      "MA",
                      "MI",
                      "MN",
                      "MS",
                      "MO",
                      "MT",
                      "NE",
                      "NV",
                      "NH",
                      "NJ",
                      "NM",
                      "NY",
                      "NC",
                      "ND",
                      "MP",
                      "OH",
                      "OK",
                      "OR",
                      "PA",
                      "PR",
                      "RI",
                      "SC",
                      "SD",
                      "TN",
                      "TX",
                      "TT",
                      "UT",
                      "VT",
                      "VA",
                      "VI",
                      "WA",
                      "WV",
                      "WI",
                      "WY"
                    ]
                  },
                  "phone": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clientID": {
                      "type": "integer"
                    },
                    "nameFirst": {
                      "type": "string"
                    },
                    "nameLast": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "address1": {
                      "type": "string"
                    },
                    "address2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "AL",
                        "AK",
                        "AZ",
                        "AR",
                        "AS",
                        "CA",
                        "CO",
                        "CT",
                        "DE",
                        "DC",
                        "FL",
                        "GA",
                        "GU",
                        "HI",
                        "ID",
                        "IL",
                        "IN",
                        "IA",
                        "KS",
                        "KY",
                        "LA",
                        "ME",
                        "MD",
                        "MA",
                        "MI",
                        "MN",
                        "MS",
                        "MO",
                        "MT",
                        "NE",
                        "NV",
                        "NH",
                        "NJ",
                        "NM",
                        "NY",
                        "NC",
                        "ND",
                        "MP",
                        "OH",
                        "OK",
                        "OR",
                        "PA",
                        "PR",
                        "RI",
                        "SC",
                        "SD",
                        "TN",
                        "TX",
                        "TT",
                        "UT",
                        "VT",
                        "VA",
                        "VI",
                        "WA",
                        "WV",
                        "WI",
                        "WY"
                      ]
                    },
                    "zip": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Delete a client",
        "operationId": "deleteClient",
        "parameters": [
          {
            "name": "clientID",
            "in": "path",
            "description": "ID of the client to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Client deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get orders",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "orderIDs",
            "in": "query",
            "description": "Comma-separated list of order IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "clientID",
            "in": "query",
            "description": "ID of the client",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "name of the order",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scheduledDeliveryTimeRange",
            "in": "query",
            "description": "Range of scheduled delivery dates to filter by (YYYY-MM-DD format)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "style": "form",
              "explode": true
            }
          },
          {
            "name": "createdTimeRange",
            "in": "query",
            "description": "Range of create dates to filter by (YYYY-MM-DD format)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "style": "form",
              "explode": true
            }
          },
          {
            "name": "fulfilledTimeRange",
            "in": "query",
            "description": "Range of fulfillment dates to filter by (YYYY-MM-DD format)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "style": "form",
              "explode": true
            }
          },
          {
            "name": "fulfillment",
            "in": "query",
            "description": "Order fulfillment type",
            "schema": {
              "type": "string",
              "enum": [
                "pickup",
                "delivery"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Order status",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "inProgress",
                "readyForDelivery",
                "delivered",
                "cancelled"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderID": {
                        "type": "integer"
                      },
                      "clientID": {
                        "type": "integer"
                      },
                      "scheduledDeliveryTime": {
                        "type": "string",
                        "format": "date"
                      },
                      "createdTime": {
                        "type": "string",
                        "format": "date"
                      },
                      "fulfilledTime": {
                        "type": "string",
                        "format": "date"
                      },
                      "fulfillment": {
                        "type": "string",
                        "enum": [
                          "pickup",
                          "delivery"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "created",
                          "inProgress",
                          "readyForDelivery",
                          "delivered",
                          "cancelled"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create an order",
        "operationId": "createOrder",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "clientID",
                  "scheduledDeliveryTime",
                  "fulfillment",
                  "name"
                ],
                "properties": {
                  "clientID": {
                    "type": "integer"
                  },
                  "scheduledDeliveryTime": {
                    "type": "string",
                    "format": "date"
                  },
                  "fulfillment": {
                    "type": "string",
                    "enum": [
                      "pickup",
                      "delivery"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderID": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/{orderID}": {
      "patch": {
        "tags": [
          "Orders"
        ],
        "summary": "Update an order",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scheduledDeliveryTime": {
                    "type": "string",
                    "format": "date",
                    "description": "Updated delivery date (YYYY-MM-DD format)"
                  },
                  "description": {
                    "type": "string",
                    "description": "Updated description"
                  },
                  "name": {
                    "type": "string",
                    "description": "Updated name"
                  },
                  "fulfillment": {
                    "type": "string",
                    "enum": [
                      "pickup",
                      "delivery"
                    ],
                    "description": "Updated fulfillment type"
                  },
                  "fulfilledTime": {
                    "type": "string",
                    "format": "date",
                    "description": "Updated fulfilled date (YYYY-MM-DD format)"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "created",
                      "inProgress",
                      "readyForDelivery",
                      "delivered",
                      "cancelled"
                    ],
                    "description": "Updated status"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderID": {
                      "type": "integer"
                    },
                    "clientID": {
                      "type": "integer"
                    },
                    "scheduledDeliveryTime": {
                      "type": "string",
                      "format": "date"
                    },
                    "createdTime": {
                      "type": "string",
                      "format": "date"
                    },
                    "fulfilledTime": {
                      "type": "string",
                      "format": "date"
                    },
                    "fulfillment": {
                      "type": "string",
                      "enum": [
                        "pickup",
                        "delivery"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "inProgress",
                        "readyForDelivery",
                        "delivered",
                        "cancelled"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete an order",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "orderID",
            "in": "path",
            "description": "ID of the order to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/products/stock": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get Stock Product <> Order associations",
        "operationId": "getOrderStockProducts",
        "parameters": [
          {
            "name": "orderIDs",
            "in": "query",
            "description": "ID of the order",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "stockProductID",
            "in": "query",
            "description": "ID of the stock product",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderStockID",
            "in": "query",
            "description": "ID of the order stock",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of the order stock product",
            "schema": {
              "type": "string",
              "enum": [
                "sufficient",
                "conflict",
                "insufficient"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderID": {
                        "type": "integer"
                      },
                      "stockProductID": {
                        "type": "integer"
                      },
                      "orderStockID": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "sufficient",
                          "confict",
                          "insufficient"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Add an amount of a Stock Product to an order",
        "operationId": "createOrderStockProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderID",
                  "stockProductID",
                  "unitIncome",
                  "quantity"
                ],
                "properties": {
                  "orderID": {
                    "type": "integer"
                  },
                  "stockProductID": {
                    "type": "integer"
                  },
                  "unitIncome": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order stock product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderID": {
                      "type": "integer"
                    },
                    "stockProductID": {
                      "type": "integer"
                    },
                    "orderStockID": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "sufficient",
                        "confict",
                        "insufficient"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/products/stock/{orderStockID}": {
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Delete a Stock Product quantity association of an Order",
        "operationId": "deleteOrderStockProduct",
        "parameters": [
          {
            "name": "orderStockID",
            "in": "path",
            "description": "ID of the order stock product to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order Stock Product association deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Order stock product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/stockProducts": {
      "get": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Get stock products (example 'Vanilla Cupcake')",
        "operationId": "getStockProducts",
        "parameters": [
          {
            "name": "stockProductIDs",
            "in": "query",
            "description": "filter on ID(s) of stock product(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "productName",
            "in": "query",
            "description": "Name of the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "ID of the recipe associated with the stock product",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stockProductID": {
                        "type": "integer"
                      },
                      "productName": {
                        "type": "string"
                      },
                      "recipeID": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Create a new stock product (bakery stocking smth new)",
        "operationId": "createStockProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeID",
                  "productName"
                ],
                "properties": {
                  "recipeID": {
                    "type": "integer"
                  },
                  "productName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stockProductID": {
                      "type": "integer"
                    },
                    "productName": {
                      "type": "string"
                    },
                    "recipeID": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/stockProducts/{stockProductID}": {
      "delete": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Delete a stock product",
        "operationId": "deleteStockProduct",
        "parameters": [
          {
            "name": "stockProductID",
            "in": "path",
            "description": "ID of the stock product to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Stock product deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Stock product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Update a stock product",
        "operationId": "updateStockProduct",
        "parameters": [
          {
            "name": "stockProductID",
            "in": "path",
            "description": "ID of the stock product to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productName"
                ],
                "properties": {
                  "productName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Stock product updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stockProductID": {
                      "type": "integer"
                    },
                    "productName": {
                      "type": "string"
                    },
                    "recipeID": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Stock product not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/productStocks": {
      "get": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Get status of Stocked Products (ie 'yellow cupcakes')",
        "operationId": "getProductStocks",
        "parameters": [
          {
            "name": "stockIDs",
            "in": "query",
            "description": "filter on ID(s) of product stock(s)",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              }
            }
          },
          {
            "name": "stockProductID",
            "in": "query",
            "description": "ID of the stock product",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "produced",
            "in": "query",
            "description": "Date of production (YYYY-MM-DD format)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "daysRemaining",
            "in": "query",
            "description": "Minimum number of days remaining before expiration",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of the product stock",
            "schema": {
              "type": "string",
              "enum": [
                "fresh",
                "expired"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stockID": {
                        "type": "integer"
                      },
                      "stockProductID": {
                        "type": "integer"
                      },
                      "produced": {
                        "type": "string",
                        "format": "date"
                      },
                      "daysRemaining": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "fresh",
                          "expired"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Add a stocked Product",
        "operationId": "createProductStock",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "stockProductID",
                  "produced",
                  "daysRemaining"
                ],
                "properties": {
                  "stockProductID": {
                    "type": "integer"
                  },
                  "produced": {
                    "type": "string",
                    "format": "date"
                  },
                  "daysRemaining": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product stock added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stockID": {
                      "type": "integer"
                    },
                    "stockProductID": {
                      "type": "integer"
                    },
                    "produced": {
                      "type": "string",
                      "format": "date"
                    },
                    "daysRemaining": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "fresh",
                        "expired"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/productStocks/{stockID}": {
      "delete": {
        "tags": [
          "Stock Products"
        ],
        "summary": "Delete a stocked product",
        "operationId": "deleteProductStock",
        "parameters": [
          {
            "name": "stockID",
            "in": "path",
            "description": "ID of the product stock to delete",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Product stock deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Product stock not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/orders/products/task": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve order task products",
        "operationId": "getOrderTaskProducts",
        "parameters": [
          {
            "name": "orderTaskIDs",
            "in": "query",
            "description": "Filter on ID(s) of orderTaskProducts.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "orderID",
            "in": "query",
            "description": "The ID of the order.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "The ID of the recipe.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the order task product.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "inProgress",
                "done",
                "resolved"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderTaskID": {
                        "type": "integer",
                        "description": "The ID of the order task."
                      },
                      "orderID": {
                        "type": "integer",
                        "description": "The ID of the order."
                      },
                      "recipeID": {
                        "type": "integer",
                        "description": "The ID of the recipe this task will follow."
                      },
                      "productName": {
                        "type": "string",
                        "description": "The name of product this task will produce."
                      },
                      "unitIncome": {
                        "type": "integer",
                        "description": "Gross Income per unit from this order task"
                      },
                      "status": {
                        "type": "string",
                        "description": "The status of the order task.",
                        "enum": [
                          "created",
                          "inProgress",
                          "done",
                          "resolved"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Add a task product to an order",
        "operationId": "addOrderStockProduct",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderID",
                  "recipeID",
                  "productName",
                  "quantity",
                  "unitIncome"
                ],
                "properties": {
                  "orderID": {
                    "type": "integer",
                    "description": "The ID of the order."
                  },
                  "recipeID": {
                    "type": "integer",
                    "description": "The ID of the recipe."
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The quantity of the product."
                  },
                  "unitIncome": {
                    "type": "integer",
                    "description": "The unit income of the product."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderTaskID": {
                      "type": "integer",
                      "description": "The ID of the order task."
                    },
                    "orderID": {
                      "type": "integer",
                      "description": "The ID of the order."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe this task will follow."
                    },
                    "unitIncome": {
                      "type": "integer",
                      "description": "Gross Income per unit from this order task"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the order task.",
                      "enum": [
                        "created",
                        "inProgress",
                        "done",
                        "resolved"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orders/products/task/{orderTaskID}": {
      "patch": {
        "tags": [
          "Orders"
        ],
        "operationId": "updateOrderTaskProduct",
        "parameters": [
          {
            "name": "orderTaskID",
            "in": "path",
            "description": "The ID of the order task.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "unitIncome": {
                    "type": "number",
                    "description": "The updated income per unit for this order task"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The updated number of products needed for this order task"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "created",
                      "inProgress",
                      "done",
                      "removed"
                    ],
                    "description": "The updated current status of this order task"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderTaskID": {
                      "type": "integer"
                    },
                    "unitIncome": {
                      "type": "number",
                      "format": "double"
                    },
                    "quantity": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "inProgress",
                        "done",
                        "removed"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "operationId": "deleteOrderTaskProduct",
        "parameters": [
          {
            "name": "orderTaskID",
            "in": "path",
            "description": "The ID of the order task.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Finance"
        ],
        "operationId": "getInvoices",
        "parameters": [
          {
            "name": "invoiceIDs",
            "in": "query",
            "description": "The ID(s) of the invoice(s). Comma-separated list of integers.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of the invoice.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "order"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the invoice.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "pending",
                "sent",
                "paymentPending",
                "paymentPartial",
                "paymentFull",
                "closed",
                "overdue",
                "void",
                "refunded",
                "disputed"
              ]
            }
          },
          {
            "name": "subtotalMin",
            "in": "query",
            "description": "A filter on the minimum invoice amount.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "subtotalMax",
            "in": "query",
            "description": "A filter on the maximum invoice amount.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "invoiceID": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "order"
                        ]
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "pending",
                          "sent",
                          "paymentPending",
                          "paymentPartial",
                          "paymentFull",
                          "closed",
                          "overdue",
                          "void",
                          "refunded",
                          "disputed"
                        ]
                      },
                      "subtotal": {
                        "type": "number",
                        "format": "double",
                        "description": "The total billable amount for this invoice."
                      },
                      "taxesFees": {
                        "type": "number",
                        "format": "double",
                        "description": "Taxes and Fees applied to subtotal."
                      },
                      "totalBillable": {
                        "type": "number",
                        "format": "double",
                        "description": "Subtotal plus taxes and fees."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Finance"
        ],
        "operationId": "createInvoice",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "status",
                  "billableAmount"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "order"
                    ],
                    "description": "The type of the invoice."
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "pending",
                      "sent",
                      "paymentPending",
                      "paymentPartial",
                      "paymentFull",
                      "closed",
                      "overdue",
                      "void",
                      "refunded",
                      "disputed"
                    ],
                    "description": "The status of the invoice."
                  },
                  "subtotal": {
                    "type": "number",
                    "format": "double",
                    "description": "The total billable amount for this invoice."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoiceID": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "order"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "pending",
                        "sent",
                        "paymentPending",
                        "paymentPartial",
                        "paymentFull",
                        "closed",
                        "overdue",
                        "void",
                        "refunded",
                        "disputed"
                      ]
                    },
                    "subtotal": {
                      "type": "number",
                      "format": "double",
                      "description": "The total billable amount for this invoice."
                    },
                    "taxesFees": {
                      "type": "number",
                      "format": "double",
                      "description": "Taxes and Fees applied to subtotal."
                    },
                    "totalBillable": {
                      "type": "number",
                      "format": "double",
                      "description": "Subtotal plus taxes and fees."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{invoiceID}": {
      "patch": {
        "tags": [
          "Finance"
        ],
        "operationId": "updateInvoice",
        "parameters": [
          {
            "name": "invoiceID",
            "in": "path",
            "description": "The ID of the invoice.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "pending",
                      "sent",
                      "paymentPending",
                      "paymentPartial",
                      "paymentFull",
                      "closed",
                      "overdue",
                      "void",
                      "refunded",
                      "disputed"
                    ],
                    "description": "The status of the invoice."
                  },
                  "subtotal": {
                    "type": "number",
                    "format": "double",
                    "description": "The total billable amount for this invoice."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoiceID": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "order"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "pending",
                        "sent",
                        "paymentPending",
                        "paymentPartial",
                        "paymentFull",
                        "closed",
                        "overdue",
                        "void",
                        "refunded",
                        "disputed"
                      ]
                    },
                    "subtotal": {
                      "type": "number",
                      "format": "double",
                      "description": "The total billable amount for this invoice."
                    },
                    "taxesFees": {
                      "type": "number",
                      "format": "double",
                      "description": "Taxes and Fees applied to subtotal."
                    },
                    "totalBillable": {
                      "type": "number",
                      "format": "double",
                      "description": "Subtotal plus taxes and fees."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/notes": {
      "get": {
        "tags": [
          "Finance"
        ],
        "operationId": "getInvoiceNotes",
        "parameters": [
          {
            "name": "invoiceNoteIDs",
            "in": "query",
            "description": "Comma-separated list of invoice note IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "invoiceID",
            "in": "query",
            "description": "The ID of the invoice for filtering invoice notes.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "invoiceNoteID": {
                        "type": "integer",
                        "description": "The ID of the invoice note."
                      },
                      "invoiceID": {
                        "type": "integer",
                        "description": "The ID of the invoice."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of the invoice note."
                      },
                      "note": {
                        "type": "string",
                        "description": "The note for the invoice."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/notes/{invoiceID}": {
      "post": {
        "tags": [
          "Finance"
        ],
        "operationId": "createInvoiceNote",
        "parameters": [
          {
            "name": "invoiceID",
            "in": "path",
            "description": "The ID of the invoice.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "note"
                ],
                "properties": {
                  "note": {
                    "type": "string",
                    "description": "The note for the invoice."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoiceNoteID": {
                      "type": "integer",
                      "description": "The ID of the invoice note."
                    },
                    "invoiceID": {
                      "type": "integer",
                      "description": "The ID of the invoice."
                    },
                    "time": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of the invoice note."
                    },
                    "note": {
                      "type": "string",
                      "description": "The note for the invoice."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/logs": {
      "get": {
        "tags": [
          "Finance"
        ],
        "operationId": "getInvoiceLogs",
        "parameters": [
          {
            "name": "invoiceLogIDs",
            "in": "query",
            "description": "Comma-separated list of invoice log IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "invoiceID",
            "in": "query",
            "description": "The ID of the invoice.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of the invoice log.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "statusChange"
              ]
            }
          },
          {
            "name": "dateRange",
            "in": "query",
            "description": "Start and end timestamps for filtering invoice logs. Array with two values (start and end timestamps).",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              },
              "style": "form",
              "explode": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "invoiceLogID": {
                        "type": "integer",
                        "description": "The ID of the invoice log."
                      },
                      "invoiceID": {
                        "type": "integer",
                        "description": "The ID of the invoice."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "created",
                          "statusChange"
                        ],
                        "description": "The type of the invoice log."
                      },
                      "log": {
                        "type": "string",
                        "description": "The log for the invoice."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/logs/{invoiceID}": {
      "post": {
        "tags": [
          "Finance"
        ],
        "operationId": "createInvoiceLog",
        "parameters": [
          {
            "name": "invoiceID",
            "in": "path",
            "description": "The ID of the invoice.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "log"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "created",
                      "statusChange"
                    ],
                    "description": "The type of the invoice log."
                  },
                  "log": {
                    "type": "string",
                    "description": "The log for the invoice."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoiceLogID": {
                      "type": "integer",
                      "description": "The ID of the invoice log."
                    },
                    "invoiceID": {
                      "type": "integer",
                      "description": "The ID of the invoice."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "created",
                        "statusChange"
                      ],
                      "description": "The type of the invoice log."
                    },
                    "log": {
                      "type": "string",
                      "description": "The log for the invoice."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Finance"
        ],
        "operationId": "getPayments",
        "parameters": [
          {
            "name": "paymentIDs",
            "in": "query",
            "description": "Comma-separated list of payment IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "invoiceID",
            "in": "query",
            "description": "The ID of the invoice.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "method",
            "in": "query",
            "description": "The payment method.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cash",
                "card",
                "digital"
              ]
            }
          },
          {
            "name": "dateRange",
            "in": "query",
            "description": "Start and end date for filtering payments. Array with two date strings.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              },
              "style": "form",
              "explode": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "paymentID": {
                        "type": "integer",
                        "description": "The ID of the payment."
                      },
                      "invoiceID": {
                        "type": "integer",
                        "description": "The ID of the invoice."
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "cash",
                          "card",
                          "digital"
                        ],
                        "description": "The payment method."
                      },
                      "receivedTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the payment was received."
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The amount of this payment."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Finance"
        ],
        "operationId": "createPayment",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoiceID",
                  "method",
                  "receivedTime"
                ],
                "properties": {
                  "invoiceID": {
                    "type": "integer",
                    "description": "The ID of the invoice."
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "cash",
                      "card",
                      "digital"
                    ],
                    "description": "The payment method."
                  },
                  "receivedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp when the payment was received."
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The amount of this payment."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "paymentID": {
                      "type": "integer",
                      "description": "The ID of the payment."
                    },
                    "invoiceID": {
                      "type": "integer",
                      "description": "The ID of the invoice."
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "cash",
                        "card",
                        "digital"
                      ],
                      "description": "The payment method."
                    },
                    "receivedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the payment was received."
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "description": "The amount of this payment."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/expenses": {
      "get": {
        "tags": [
          "Finance"
        ],
        "operationId": "getExpenses",
        "parameters": [
          {
            "name": "expenseIDs",
            "in": "query",
            "description": "Comma-separated list of expense IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "receiptID",
            "in": "query",
            "description": "The ID of the receipt associated with the expense.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "transactionDateRange",
            "in": "query",
            "description": "Start and end date range for filtering expenses. Array with two date strings.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the expense.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amountRange",
            "in": "query",
            "description": "Start and end amount range for filtering expenses. Array with two currency amounts.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            },
            "style": "form",
            "explode": true
          },
          {
            "name": "method",
            "in": "query",
            "description": "The payment method for the expense.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "cash",
                "card",
                "digital"
              ]
            }
          },
          {
            "name": "purchaser",
            "in": "query",
            "description": "The purchaser or person responsible for the expense.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "The category of the expense.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "officeSupply",
                "stockIngredient",
                "Tools",
                "Software",
                "Parcel",
                "Travel",
                "Facilities",
                "Rent",
                "Marketing",
                "Other"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "expenseID": {
                        "type": "integer",
                        "description": "The ID of the expense."
                      },
                      "name": {
                        "type": "string",
                        "description": "The descriptive name of the expense."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the expense."
                      },
                      "amount": {
                        "type": "number",
                        "format": "double",
                        "description": "The currency amount of the expense."
                      },
                      "vendorSupplier": {
                        "type": "string",
                        "description": "The vendor or supplier of the expense."
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "cash",
                          "card",
                          "digital",
                          "check"
                        ],
                        "description": "The payment method for the expense."
                      },
                      "receiptID": {
                        "type": "integer",
                        "description": "The ID of the receipt associated with the expense."
                      },
                      "purchaser": {
                        "type": "string",
                        "description": "The purchaser or person responsible for the expense."
                      },
                      "category": {
                        "type": "string",
                        "enum": [
                          "officeSupply",
                          "stockIngredient",
                          "Tools",
                          "Software",
                          "Parcel",
                          "Travel",
                          "Facilities",
                          "Rent",
                          "Marketing",
                          "Other"
                        ],
                        "description": "The category of the expense."
                      },
                      "transactionDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The date of the expense transaction."
                      },
                      "createdTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp when the expense was created."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Finance"
        ],
        "operationId": "createExpense",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "amount",
                  "vendorSupplier",
                  "method",
                  "receiptID",
                  "purchaser",
                  "category"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The descriptive name of the expense."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the expense."
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The currency amount of the expense."
                  },
                  "vendorSupplier": {
                    "type": "string",
                    "description": "The vendor or supplier of the expense."
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "cash",
                      "card",
                      "digital",
                      "check"
                    ],
                    "description": "The payment method for the expense."
                  },
                  "receiptID": {
                    "type": "integer",
                    "description": "The ID of the receipt associated with the expense."
                  },
                  "purchaser": {
                    "type": "string",
                    "description": "The purchaser or person responsible for the expense."
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "officeSupply",
                      "stockIngredient",
                      "Tools",
                      "Software",
                      "Parcel",
                      "Travel",
                      "Facilities",
                      "Rent",
                      "Marketing",
                      "Other"
                    ],
                    "description": "The category of the expense."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expenseID": {
                      "type": "integer",
                      "description": "The ID of the expense."
                    },
                    "name": {
                      "type": "string",
                      "description": "The descriptive name of the expense."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the expense."
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "description": "The currency amount of the expense."
                    },
                    "vendorSupplier": {
                      "type": "string",
                      "description": "The vendor or supplier of the expense."
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "cash",
                        "card",
                        "digital",
                        "check"
                      ],
                      "description": "The payment method for the expense."
                    },
                    "receiptID": {
                      "type": "integer",
                      "description": "The ID of the receipt associated with the expense."
                    },
                    "purchaser": {
                      "type": "string",
                      "description": "The purchaser or person responsible for the expense."
                    },
                    "category": {
                      "type": "string",
                      "enum": [
                        "officeSupply",
                        "stockIngredient",
                        "Tools",
                        "Software",
                        "Parcel",
                        "Travel",
                        "Facilities",
                        "Rent",
                        "Marketing",
                        "Other"
                      ],
                      "description": "The category of the expense."
                    },
                    "transactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date of the expense transaction."
                    },
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the expense was created."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{expenseID}": {
      "patch": {
        "tags": [
          "Finance"
        ],
        "operationId": "updateExpense",
        "parameters": [
          {
            "name": "expenseID",
            "in": "path",
            "description": "The ID of the expense.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The updated description of the expense."
                  },
                  "transactionDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The updated transaction date of the expense."
                  },
                  "amount": {
                    "type": "number",
                    "format": "double",
                    "description": "The updated currency amount of the expense."
                  },
                  "vendorSupplier": {
                    "type": "string",
                    "description": "The updated vendor or supplier of the expense."
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "cash",
                      "card",
                      "digital",
                      "check"
                    ],
                    "description": "The updated payment method for the expense."
                  },
                  "category": {
                    "type": "string",
                    "enum": [
                      "officeSupply",
                      "stockIngredient",
                      "Tools",
                      "Software",
                      "Parcel",
                      "Travel",
                      "Facilities",
                      "Rent",
                      "Marketing",
                      "Other"
                    ],
                    "description": "The updated category of the expense."
                  },
                  "purchaser": {
                    "type": "string",
                    "description": "The updated purchaser or person responsible for the expense."
                  },
                  "receiptID": {
                    "type": "integer",
                    "description": "The updated ID of the receipt associated with the expense."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expenseID": {
                      "type": "integer",
                      "description": "The ID of the expense."
                    },
                    "name": {
                      "type": "string",
                      "description": "The descriptive name of the expense."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the expense."
                    },
                    "amount": {
                      "type": "number",
                      "format": "double",
                      "description": "The currency amount of the expense."
                    },
                    "vendorSupplier": {
                      "type": "string",
                      "description": "The vendor or supplier of the expense."
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "cash",
                        "card",
                        "digital",
                        "check"
                      ],
                      "description": "The payment method for the expense."
                    },
                    "receiptID": {
                      "type": "integer",
                      "description": "The ID of the receipt associated with the expense."
                    },
                    "purchaser": {
                      "type": "string",
                      "description": "The purchaser or person responsible for the expense."
                    },
                    "category": {
                      "type": "string",
                      "enum": [
                        "officeSupply",
                        "stockIngredient",
                        "Tools",
                        "Software",
                        "Parcel",
                        "Travel",
                        "Facilities",
                        "Rent",
                        "Marketing",
                        "Other"
                      ],
                      "description": "The category of the expense."
                    },
                    "transactionDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The date of the expense transaction."
                    },
                    "createdTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp when the expense was created."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "getTags",
        "parameters": [
          {
            "name": "tagIDs",
            "in": "query",
            "description": "Comma-separated list of tag IDs",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "The name of the tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tagID": {
                        "type": "integer",
                        "description": "The ID of the tag."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the tag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "createTag",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the tag."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tagID": {
                      "type": "integer",
                      "description": "The ID of the tag."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tag."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/{tagID}": {
      "patch": {
        "tags": [
          "Tags"
        ],
        "operationId": "updateTag",
        "parameters": [
          {
            "name": "tagID",
            "in": "path",
            "description": "The ID of the tag.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The updated name of the tag.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "The name of the tag."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tagID": {
                      "type": "integer",
                      "description": "The ID of the tag."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tag."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "deleteTag",
        "parameters": [
          {
            "name": "tagID",
            "in": "path",
            "description": "The ID of the tag.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/tags/order": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "getOrderTags",
        "parameters": [
          {
            "name": "orderTagIDs",
            "in": "query",
            "description": "Comma-separated list of order tag IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "orderID",
            "in": "query",
            "description": "The ID of the order.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagID",
            "in": "query",
            "description": "The ID of the tag.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orderTagID": {
                        "type": "integer",
                        "description": "The ID of the order tag."
                      },
                      "orderID": {
                        "type": "integer",
                        "description": "The ID of the order."
                      },
                      "tagID": {
                        "type": "integer",
                        "description": "The ID of the tag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "createOrderTag",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderID",
                  "tagID"
                ],
                "properties": {
                  "orderID": {
                    "type": "integer",
                    "description": "The ID of the order."
                  },
                  "tagID": {
                    "type": "integer",
                    "description": "The ID of the tag."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orderTagID": {
                      "type": "integer",
                      "description": "The ID of the order tag."
                    },
                    "orderID": {
                      "type": "integer",
                      "description": "The ID of the order."
                    },
                    "tagID": {
                      "type": "integer",
                      "description": "The ID of the tag."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/order/{orderTagID}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "deleteOrderTag",
        "parameters": [
          {
            "name": "orderTagID",
            "in": "path",
            "description": "The ID of the order tag.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/tags/recipe": {
      "get": {
        "tags": [
          "Tags"
        ],
        "operationId": "getRecipeTags",
        "parameters": [
          {
            "name": "recipeTagIDs",
            "in": "query",
            "description": "Comma-separated list of recipe tag IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "The ID of the recipe.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "tagID",
            "in": "query",
            "description": "The ID of the tag.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipeTagID": {
                        "type": "integer",
                        "description": "The ID of the recipe tag."
                      },
                      "recipeID": {
                        "type": "integer",
                        "description": "The ID of the recipe."
                      },
                      "tagID": {
                        "type": "integer",
                        "description": "The ID of the tag."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "operationId": "createRecipeTag",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeID",
                  "tagID"
                ],
                "properties": {
                  "recipeID": {
                    "type": "integer",
                    "description": "The ID of the recipe."
                  },
                  "tagID": {
                    "type": "integer",
                    "description": "The ID of the tag."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeTagID": {
                      "type": "integer",
                      "description": "The ID of the recipe tag."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "tagID": {
                      "type": "integer",
                      "description": "The ID of the tag."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tags/recipe/{recipeTagID}": {
      "delete": {
        "tags": [
          "Tags"
        ],
        "operationId": "deleteRecipeTag",
        "parameters": [
          {
            "name": "recipeTagID",
            "in": "path",
            "description": "The ID of the recipe tag.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "operationId": "getRecipes",
        "parameters": [
          {
            "name": "recipeIDs",
            "in": "query",
            "description": "Comma-separated list of recipe IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title of the recipe.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "recipeCategoryID",
            "in": "query",
            "description": "The ID of the recipe category.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "The title of the recipe."
                      },
                      "recipeCategoryID": {
                        "type": "integer",
                        "description": "The ID of the recipe category."
                      },
                      "servings": {
                        "type": "integer",
                        "description": "The number of servings the recipe yields."
                      },
                      "lifespanDays": {
                        "type": "integer",
                        "description": "The lifespan of the recipe in days."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "operationId": "createRecipe",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "recipeCategoryID",
                  "servings",
                  "lifespanDays"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the recipe."
                  },
                  "recipeCategoryID": {
                    "type": "integer",
                    "description": "The ID of the recipe category."
                  },
                  "servings": {
                    "type": "integer",
                    "description": "The number of servings the recipe yields."
                  },
                  "lifespanDays": {
                    "type": "integer",
                    "description": "The lifespan of the recipe in days."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the recipe."
                    },
                    "recipeCategoryID": {
                      "type": "integer",
                      "description": "The ID of the recipe category."
                    },
                    "servings": {
                      "type": "integer",
                      "description": "The number of servings the recipe yields."
                    },
                    "lifespanDays": {
                      "type": "integer",
                      "description": "The lifespan of the recipe in days."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipes/{recipeID}": {
      "patch": {
        "tags": [
          "Recipes"
        ],
        "operationId": "updateRecipe",
        "parameters": [
          {
            "name": "recipeID",
            "in": "path",
            "description": "The ID of the recipe.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The updated title of the recipe."
                  },
                  "servings": {
                    "type": "integer",
                    "description": "The updated number of servings the recipe yields."
                  },
                  "recipeCategoryID": {
                    "type": "integer",
                    "description": "The updated ID of the recipe category."
                  },
                  "lifespanDays": {
                    "type": "integer",
                    "description": "The updated lifespan of the recipe in days."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title of the recipe."
                    },
                    "recipeCategoryID": {
                      "type": "integer",
                      "description": "The ID of the recipe category."
                    },
                    "servings": {
                      "type": "integer",
                      "description": "The number of servings the recipe yields."
                    },
                    "lifespanDays": {
                      "type": "integer",
                      "description": "The lifespan of the recipe in days."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "operationId": "deleteRecipe",
        "parameters": [
          {
            "name": "recipeID",
            "in": "path",
            "description": "The ID of the recipe.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/recipes/components": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "operationId": "getRecipeComponents",
        "parameters": [
          {
            "name": "recipeComponentIDs",
            "in": "query",
            "description": "Comma-separated list of recipe component IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "Filter for components of provided parent recipe.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipeComponentID": {
                        "type": "integer",
                        "description": "The ID of the component."
                      },
                      "recipeID": {
                        "type": "integer",
                        "description": "The ID of the parent recipe."
                      },
                      "componentID": {
                        "type": "integer",
                        "description": "The ID of the component recipe."
                      },
                      "componentAdvanceDays": {
                        "type": "integer",
                        "description": "The number of days in advance this component can be prepared."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "operationId": "createRecipeComponent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeID",
                  "componentID",
                  "componentAdvanceDays"
                ],
                "properties": {
                  "recipeID": {
                    "type": "integer",
                    "description": "The ID of the parent recipe."
                  },
                  "componentID": {
                    "type": "integer",
                    "description": "The ID of the component recipe."
                  },
                  "componentAdvanceDays": {
                    "type": "integer",
                    "description": "The number of days in advance this component can be prepared."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeComponentID": {
                      "type": "integer",
                      "description": "The ID of the component."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the parent recipe."
                    },
                    "componentID": {
                      "type": "integer",
                      "description": "The ID of the component recipe."
                    },
                    "componentAdvanceDays": {
                      "type": "integer",
                      "description": "The number of days in advance this component can be prepared."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipes/components/{recipeComponentID}": {
      "patch": {
        "tags": [
          "Recipes"
        ],
        "operationId": "updateRecipeComponent",
        "parameters": [
          {
            "name": "recipeComponentID",
            "in": "path",
            "description": "The ID of the recipe component.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "componentAdvanceDays": {
                    "type": "integer",
                    "description": "The updated number of days in advance to prepare the component."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeComponentID": {
                      "type": "integer",
                      "description": "The ID of the component."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the parent recipe."
                    },
                    "componentID": {
                      "type": "integer",
                      "description": "The ID of the component recipe."
                    },
                    "componentAdvanceDays": {
                      "type": "integer",
                      "description": "The number of days in advance this component can be prepared."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "operationId": "deleteRecipeComponent",
        "parameters": [
          {
            "name": "recipeComponentID",
            "in": "path",
            "description": "The ID of the recipe component.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/recipes/categories": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "operationId": "getRecipeCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipeCategoryID": {
                        "type": "integer",
                        "description": "The ID of the recipe category."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the recipe category."
                      }
                    },
                    "required": [
                      "recipeCategoryID",
                      "name"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "operationId": "createRecipeCategory",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the recipe category."
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeCategoryID": {
                      "type": "integer",
                      "description": "The ID of the recipe category."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the recipe category."
                    }
                  },
                  "required": [
                    "recipeCategoryID",
                    "name"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/recipes/categories/{recipeCategoryID}": {
      "patch": {
        "tags": [
          "Recipes"
        ],
        "operationId": "updateRecipeCategory",
        "parameters": [
          {
            "name": "recipeCategoryID",
            "in": "path",
            "description": "The ID of the recipe category.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the recipe category."
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeCategoryID": {
                      "type": "integer",
                      "description": "The ID of the recipe category."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the recipe category."
                    }
                  },
                  "required": [
                    "recipeCategoryID",
                    "name"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "operationId": "deleteRecipeCategory",
        "parameters": [
          {
            "name": "recipeCategoryID",
            "in": "path",
            "description": "The ID of the recipe category.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/steps": {
      "get": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "getSteps",
        "parameters": [
          {
            "name": "stepIDs",
            "in": "query",
            "description": "Comma-separated list of step IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title of the step.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "stepID": {
                        "type": "integer",
                        "description": "The ID of the step."
                      },
                      "title": {
                        "type": "string",
                        "description": "The title of the step."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the step."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "createStep",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "description"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the step."
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the step."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stepID": {
                      "type": "integer",
                      "description": "The ID of the step."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the step."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the step."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/steps/{stepID}": {
      "patch": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "updateStep",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "description": "The ID of the step.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The updated title of the step."
                  },
                  "description": {
                    "type": "string",
                    "description": "The updated description of the step."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stepID": {
                      "type": "integer",
                      "description": "The ID of the step."
                    },
                    "title": {
                      "type": "string",
                      "description": "The title of the step."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the step."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "deleteStep",
        "parameters": [
          {
            "name": "stepID",
            "in": "path",
            "description": "The ID of the step.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/steps/recipe": {
      "post": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "createRecipeStep",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeID",
                  "stepID"
                ],
                "properties": {
                  "recipeID": {
                    "type": "integer",
                    "description": "The ID of the recipe."
                  },
                  "stepID": {
                    "type": "integer",
                    "description": "The ID of the step."
                  },
                  "sequence": {
                    "type": "integer",
                    "description": "The sequence number of the recipe step."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeStepID": {
                      "type": "integer",
                      "description": "The ID of the recipe step."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "stepID": {
                      "type": "integer",
                      "description": "The ID of the step."
                    },
                    "sequence": {
                      "type": "integer",
                      "description": "The sequence number of the recipe step."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "getRecipeSteps",
        "parameters": [
          {
            "name": "recipeStepIDs",
            "in": "query",
            "description": "Comma-separated list of recipe step IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "The ID of the recipe.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "stepID",
            "in": "query",
            "description": "The ID of the step.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipeStepID": {
                        "type": "integer",
                        "description": "The ID of the recipe step."
                      },
                      "recipeID": {
                        "type": "integer",
                        "description": "The ID of the recipe."
                      },
                      "stepID": {
                        "type": "integer",
                        "description": "The ID of the step."
                      },
                      "sequence": {
                        "type": "integer",
                        "description": "The sequence number of the recipe step."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/steps/recipe/{recipeStepID}": {
      "patch": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "updateRecipeStep",
        "parameters": [
          {
            "name": "recipeStepID",
            "in": "path",
            "description": "The ID of the recipe step.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sequence",
            "in": "body",
            "description": "The updated sequence number of the recipe step.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeStepID": {
                      "type": "integer",
                      "description": "The ID of the recipe step."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "stepID": {
                      "type": "integer",
                      "description": "The ID of the step."
                    },
                    "sequence": {
                      "type": "integer",
                      "description": "The sequence number of the recipe step."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recipe Steps"
        ],
        "operationId": "deleteRecipeStep",
        "parameters": [
          {
            "name": "recipeStepID",
            "in": "path",
            "description": "The ID of the recipe step.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/tools": {
      "get": {
        "tags": [
          "Tools"
        ],
        "operationId": "getTools",
        "parameters": [
          {
            "name": "toolIDs",
            "in": "query",
            "description": "Comma-separated list of tool IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the tool.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "toolID": {
                        "type": "integer",
                        "description": "The ID of the tool."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the tool."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tools"
        ],
        "operationId": "createTool",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the tool."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "toolID": {
                      "type": "integer",
                      "description": "The ID of the tool."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tool."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/tools/{toolID}": {
      "patch": {
        "tags": [
          "Tools"
        ],
        "operationId": "updateTool",
        "parameters": [
          {
            "name": "toolID",
            "in": "path",
            "description": "The ID of the tool.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The updated name of the tool."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "toolID": {
                      "type": "integer",
                      "description": "The ID of the tool."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the tool."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tools"
        ],
        "operationId": "deleteTool",
        "parameters": [
          {
            "name": "toolID",
            "in": "path",
            "description": "The ID of the tool.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/tools/recipes": {
      "get": {
        "tags": [
          "Tools"
        ],
        "operationId": "getRecipeTools",
        "parameters": [
          {
            "name": "recipeToolIDs",
            "in": "query",
            "description": "Comma-separated list of recipe tool IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "The ID of the recipe.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toolID",
            "in": "query",
            "description": "The ID of the tool.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipeToolID": {
                        "type": "integer",
                        "description": "The ID of the recipe tool."
                      },
                      "recipeID": {
                        "type": "integer",
                        "description": "The ID of the recipe."
                      },
                      "toolID": {
                        "type": "integer",
                        "description": "The ID of the tool."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The quantity of the tool for the recipe."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tools"
        ],
        "operationId": "createRecipeTool",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeID",
                  "toolID",
                  "quantity"
                ],
                "properties": {
                  "recipeID": {
                    "type": "integer",
                    "description": "The ID of the recipe."
                  },
                  "toolID": {
                    "type": "integer",
                    "description": "The ID of the tool."
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The quantity of the tool for the recipe."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeToolID": {
                      "type": "integer",
                      "description": "The ID of the recipe tool."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "toolID": {
                      "type": "integer",
                      "description": "The ID of the tool."
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "The quantity of the tool for the recipe."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/tools/recipes/{recipeToolID}": {
      "patch": {
        "tags": [
          "Tools"
        ],
        "operationId": "updateRecipeTool",
        "parameters": [
          {
            "name": "recipeToolID",
            "in": "path",
            "description": "The ID of the recipe tool.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "The updated quantity of the tool for the recipe."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeToolID": {
                      "type": "integer",
                      "description": "The ID of the recipe tool."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "toolID": {
                      "type": "integer",
                      "description": "The ID of the tool."
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "The quantity of the tool for the recipe."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tools"
        ],
        "operationId": "deleteRecipeTool",
        "parameters": [
          {
            "name": "recipeToolID",
            "in": "path",
            "description": "The ID of the recipe tool.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/toolStocks": {
      "get": {
        "tags": [
          "Tools"
        ],
        "operationId": "getToolStocks",
        "parameters": [
          {
            "name": "toolStockIDs",
            "in": "query",
            "description": "Comma-separated list of tool stock IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "toolID",
            "in": "query",
            "description": "The ID of the tool.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "purchasedBy",
            "in": "query",
            "description": "The purchaser of the tool.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "toolStockID": {
                        "type": "integer",
                        "description": "The ID of the tool stock."
                      },
                      "toolID": {
                        "type": "integer",
                        "description": "The ID of the tool."
                      },
                      "purchasedBy": {
                        "type": "string",
                        "description": "The purchaser of the tool."
                      },
                      "purchaseDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The purchase date of the tool (YYYY-MM-DD)."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The quantity of the tool purchased."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tools"
        ],
        "operationId": "createToolStock",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "toolID",
                  "purchasedBy",
                  "purchaseDate",
                  "quantity"
                ],
                "properties": {
                  "toolID": {
                    "type": "integer",
                    "description": "The ID of the tool."
                  },
                  "purchasedBy": {
                    "type": "string",
                    "description": "The purchaser of the tool."
                  },
                  "purchaseDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The purchase date of the tool (YYYY-MM-DD)."
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "The quantity of the tool purchased."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "toolStockID": {
                      "type": "integer",
                      "description": "The ID of the tool stock."
                    },
                    "toolID": {
                      "type": "integer",
                      "description": "The ID of the tool."
                    },
                    "purchasedBy": {
                      "type": "string",
                      "description": "The purchaser of the tool."
                    },
                    "purchaseDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The purchase date of the tool (YYYY-MM-DD)."
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "The quantity of the tool purchased."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/toolStocks/{toolStockID}": {
      "patch": {
        "tags": [
          "Tools"
        ],
        "operationId": "updateToolStock",
        "parameters": [
          {
            "name": "toolStockID",
            "in": "path",
            "description": "The ID of the tool stock.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "integer",
                    "description": "The updated quantity of the tool stock."
                  },
                  "purchasedBy": {
                    "type": "string",
                    "description": "The updated purchaser of the tool stock."
                  },
                  "purchaseDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The updated purchase date of the tool stock (YYYY-MM-DD)."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "toolStockID": {
                      "type": "integer",
                      "description": "The ID of the tool stock."
                    },
                    "toolID": {
                      "type": "integer",
                      "description": "The ID of the tool."
                    },
                    "purchasedBy": {
                      "type": "string",
                      "description": "The purchaser of the tool."
                    },
                    "purchaseDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The purchase date of the tool (YYYY-MM-DD)."
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "The quantity of the tool purchased."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tools"
        ],
        "operationId": "deleteToolStock",
        "parameters": [
          {
            "name": "toolStockID",
            "in": "path",
            "description": "The ID of the tool stock.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "getIngredients",
        "parameters": [
          {
            "name": "ingredientIDs",
            "in": "query",
            "description": "Comma-separated list of ingredient IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the ingredient.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ingredientID": {
                        "type": "integer",
                        "description": "The ID of the ingredient."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the ingredient."
                      },
                      "lifespanDays": {
                        "type": "integer",
                        "description": "The lifespan of the ingredient in days."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "createIngredient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "lifespanDays"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the ingredient."
                  },
                  "lifespanDays": {
                    "type": "integer",
                    "description": "The lifespan of the ingredient in days."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredientID": {
                      "type": "integer",
                      "description": "The ID of the ingredient."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the ingredient."
                    },
                    "lifespanDays": {
                      "type": "integer",
                      "description": "The lifespan of the ingredient in days."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/ingredients/{ingredientID}": {
      "patch": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "updateIngredient",
        "parameters": [
          {
            "name": "ingredientID",
            "in": "path",
            "description": "The ID of the ingredient.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The updated name of the ingredient."
                  },
                  "lifespanDays": {
                    "type": "integer",
                    "description": "The updated lifespan of the ingredient in days."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredientID": {
                      "type": "integer",
                      "description": "The ID of the ingredient."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the ingredient."
                    },
                    "lifespanDays": {
                      "type": "integer",
                      "description": "The lifespan of the ingredient in days."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "deleteIngredient",
        "parameters": [
          {
            "name": "ingredientID",
            "in": "path",
            "description": "The ID of the ingredient.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/ingredients/recipes": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "getRecipeIngredients",
        "parameters": [
          {
            "name": "recipeIngredientIDs",
            "in": "query",
            "description": "Comma-separated list of recipe ingredient IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "recipeID",
            "in": "query",
            "description": "The ID of the recipe.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          },
          {
            "name": "ingredientID",
            "in": "query",
            "description": "The ID of the ingredient.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "recipeIngredientID": {
                        "type": "integer",
                        "description": "The ID of the recipe-ingredient pairing."
                      },
                      "recipeID": {
                        "type": "integer",
                        "description": "The ID of the recipe."
                      },
                      "ingredientID": {
                        "type": "integer",
                        "description": "The ID of the ingredient."
                      },
                      "measurementUnit": {
                        "type": "string",
                        "description": "The measurement unit for the ingredient."
                      },
                      "measurement": {
                        "type": "integer",
                        "description": "The measurement value for the ingredient."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "createRecipeIngredient",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "recipeID",
                  "ingredientID",
                  "measurementUnit",
                  "measurement"
                ],
                "properties": {
                  "recipeID": {
                    "type": "integer",
                    "description": "The ID of the recipe."
                  },
                  "ingredientID": {
                    "type": "integer",
                    "description": "The ID of the ingredient."
                  },
                  "measurementUnit": {
                    "type": "string",
                    "description": "The measurement unit for the ingredient.",
                    "enum": [
                      "gram",
                      "ounce",
                      "pound",
                      "teaspoon",
                      "tablespoon",
                      "cup",
                      "quart",
                      "gallon",
                      "milliliter",
                      "liter",
                      "bags",
                      "boxes",
                      "cartons",
                      "pallets",
                      "bottles",
                      "containers",
                      "bunch",
                      "dash"
                    ]
                  },
                  "measurement": {
                    "type": "integer",
                    "description": "The measurement value for the ingredient."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeIngredientID": {
                      "type": "integer",
                      "description": "The ID of the recipe-ingredient pairing."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "ingredientID": {
                      "type": "integer",
                      "description": "The ID of the ingredient."
                    },
                    "measurementUnit": {
                      "type": "string",
                      "description": "The measurement unit for the ingredient."
                    },
                    "measurement": {
                      "type": "integer",
                      "description": "The measurement value for the ingredient."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/ingredients/recipes/{recipeIngredientID}": {
      "patch": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "updateRecipeIngredient",
        "parameters": [
          {
            "name": "recipeIngredientID",
            "in": "path",
            "description": "The ID of the recipe ingredient.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "measurementUnit": {
                    "type": "string",
                    "description": "The updated measurement unit for the recipe ingredient.",
                    "enum": [
                      "gram",
                      "ounce",
                      "pound",
                      "teaspoon",
                      "tablespoon",
                      "cup",
                      "quart",
                      "gallon",
                      "milliliter",
                      "liter",
                      "bags",
                      "boxes",
                      "cartons",
                      "pallets",
                      "bottles",
                      "containers"
                    ]
                  },
                  "measurement": {
                    "type": "integer",
                    "description": "The updated measurement value for the recipe ingredient."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "recipeIngredientID": {
                      "type": "integer",
                      "description": "The ID of the recipe-ingredient pairing."
                    },
                    "recipeID": {
                      "type": "integer",
                      "description": "The ID of the recipe."
                    },
                    "ingredientID": {
                      "type": "integer",
                      "description": "The ID of the ingredient."
                    },
                    "measurementUnit": {
                      "type": "string",
                      "description": "The measurement unit for the ingredient."
                    },
                    "measurement": {
                      "type": "integer",
                      "description": "The measurement value for the ingredient."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "deleteRecipeIngredient",
        "parameters": [
          {
            "name": "recipeIngredientID",
            "in": "path",
            "description": "The ID of the recipe ingredient.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/ingredientStocks": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "getIngredientStocks",
        "parameters": [
          {
            "name": "ingredientStockIDs",
            "in": "query",
            "description": "Comma-separated list of ingredient stock IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "name": "ingredientID",
            "in": "query",
            "description": "The ID of the ingredient.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "purchasedBy",
            "in": "query",
            "description": "The purchaser of the ingredient stock.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ingredientStockID": {
                        "type": "integer",
                        "description": "The ID of the ingredient stock."
                      },
                      "ingredientID": {
                        "type": "integer",
                        "description": "The ID of the ingredient."
                      },
                      "measurementUnit": {
                        "type": "string",
                        "description": "The measurement unit for the ingredient stock."
                      },
                      "measurement": {
                        "type": "integer",
                        "description": "The measurement value for the ingredient stock."
                      },
                      "purchasedDate": {
                        "type": "string",
                        "format": "date",
                        "description": "The purchased date of the ingredient stock (YYYY-MM-DD)."
                      },
                      "purchasedBy": {
                        "type": "string",
                        "description": "The purchaser of the ingredient stock."
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "createIngredientStock",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "ingredientID",
                  "measurementUnit",
                  "measurement",
                  "purchasedDate",
                  "purchasedBy"
                ],
                "properties": {
                  "ingredientID": {
                    "type": "integer",
                    "description": "The ID of the ingredient."
                  },
                  "measurementUnit": {
                    "type": "string",
                    "description": "The measurement unit for the ingredient stock.",
                    "enum": [
                      "gram",
                      "ounce",
                      "pound",
                      "teaspoon",
                      "tablespoon",
                      "cup",
                      "quart",
                      "gallon",
                      "milliliter",
                      "liter",
                      "bags",
                      "boxes",
                      "cartons",
                      "pallets",
                      "bottles",
                      "containers"
                    ]
                  },
                  "measurement": {
                    "type": "integer",
                    "description": "The measurement value for the ingredient stock."
                  },
                  "purchasedDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The purchased date of the ingredient stock (YYYY-MM-DD)."
                  },
                  "purchasedBy": {
                    "type": "string",
                    "description": "The purchaser of the ingredient stock."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredientStockID": {
                      "type": "integer",
                      "description": "The ID of the ingredient stock."
                    },
                    "ingredientID": {
                      "type": "integer",
                      "description": "The ID of the ingredient."
                    },
                    "measurementUnit": {
                      "type": "string",
                      "description": "The measurement unit for the ingredient stock."
                    },
                    "measurement": {
                      "type": "integer",
                      "description": "The measurement value for the ingredient stock."
                    },
                    "purchasedDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The purchased date of the ingredient stock (YYYY-MM-DD)."
                    },
                    "purchasedBy": {
                      "type": "string",
                      "description": "The purchaser of the ingredient stock."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/ingredientStocks/{ingredientStockID}": {
      "patch": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "updateIngredientStock",
        "parameters": [
          {
            "name": "ingredientStockID",
            "in": "path",
            "description": "The ID of the ingredient stock.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "measurementUnit": {
                    "type": "string",
                    "description": "The updated measurement unit for the ingredient stock.",
                    "enum": [
                      "gram",
                      "ounce",
                      "pound",
                      "teaspoon",
                      "tablespoon",
                      "cup",
                      "quart",
                      "gallon",
                      "milliliter",
                      "liter",
                      "bags",
                      "boxes",
                      "cartons",
                      "pallets",
                      "bottles",
                      "containers"
                    ]
                  },
                  "measurement": {
                    "type": "integer",
                    "description": "The updated measurement value for the ingredient stock."
                  },
                  "purchasedBy": {
                    "type": "string",
                    "description": "The updated purchaser of the ingredient stock."
                  },
                  "purchasedDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The updated purchased date of the ingredient stock (YYYY-MM-DD)."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ingredientStockID": {
                      "type": "integer",
                      "description": "The ID of the ingredient stock."
                    },
                    "ingredientID": {
                      "type": "integer",
                      "description": "The ID of the ingredient."
                    },
                    "measurementUnit": {
                      "type": "string",
                      "description": "The measurement unit for the ingredient stock."
                    },
                    "measurement": {
                      "type": "integer",
                      "description": "The measurement value for the ingredient stock."
                    },
                    "purchasedDate": {
                      "type": "string",
                      "format": "date",
                      "description": "The purchased date of the ingredient stock (YYYY-MM-DD)."
                    },
                    "purchasedBy": {
                      "type": "string",
                      "description": "The purchaser of the ingredient stock."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ingredients"
        ],
        "operationId": "deleteIngredientStock",
        "parameters": [
          {
            "name": "ingredientStockID",
            "in": "path",
            "description": "The ID of the ingredient stock.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "description": "The reason for deleting the ingredient stock."
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer"
          },
          "clientID": {
            "type": "integer"
          },
          "scheduledDeliveryTime": {
            "type": "string",
            "format": "date"
          },
          "createdTime": {
            "type": "string",
            "format": "date"
          },
          "fulfilledTime": {
            "type": "string",
            "format": "date"
          },
          "fulfillment": {
            "type": "string",
            "enum": [
              "pickup",
              "delivery"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "inProgress",
              "readyForDelivery",
              "delivered",
              "cancelled"
            ]
          }
        }
      },
      "NewOrderResponse": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer"
          }
        }
      },
      "OrderRequest": {
        "type": "object",
        "required": [
          "clientID",
          "deliveryDate",
          "fulfillment",
          "name"
        ],
        "properties": {
          "clientID": {
            "type": "integer"
          },
          "scheduledDeliveryTime": {
            "type": "string",
            "format": "date"
          },
          "fulfillment": {
            "type": "string",
            "enum": [
              "pickup",
              "delivery"
            ]
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "OrderStockProduct": {
        "type": "object",
        "properties": {
          "orderID": {
            "type": "integer"
          },
          "stockProductID": {
            "type": "integer"
          },
          "orderStockID": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "sufficient",
              "confict",
              "insufficient"
            ]
          }
        }
      },
      "NewOrderStockProduct": {
        "type": "object",
        "required": [
          "orderID",
          "stockProductID",
          "unitIncome",
          "quantity"
        ],
        "properties": {
          "orderID": {
            "type": "integer"
          },
          "stockProductID": {
            "type": "integer"
          },
          "unitIncome": {
            "type": "number"
          },
          "quantity": {
            "type": "integer"
          }
        }
      },
      "StockProduct": {
        "type": "object",
        "properties": {
          "stockProductID": {
            "type": "integer"
          },
          "productName": {
            "type": "string"
          },
          "recipeID": {
            "type": "integer"
          }
        }
      },
      "NewStockProduct": {
        "type": "object",
        "required": [
          "recipeID",
          "productName"
        ],
        "properties": {
          "recipeID": {
            "type": "integer"
          },
          "productName": {
            "type": "string"
          }
        }
      },
      "StockProductUpdateRequest": {
        "type": "object",
        "required": [
          "productName"
        ],
        "properties": {
          "productName": {
            "type": "string"
          }
        }
      },
      "ProductStock": {
        "type": "object",
        "properties": {
          "stockID": {
            "type": "integer"
          },
          "stockProductID": {
            "type": "integer"
          },
          "produced": {
            "type": "string",
            "format": "date"
          },
          "daysRemaining": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "fresh",
              "expired"
            ]
          }
        }
      },
      "NewProductStockRequest": {
        "type": "object",
        "required": [
          "stockProductID",
          "produced",
          "daysRemaining"
        ],
        "properties": {
          "stockProductID": {
            "type": "integer"
          },
          "produced": {
            "type": "string",
            "format": "date"
          },
          "daysRemaining": {
            "type": "integer"
          }
        }
      },
      "DeleteProductStockRequest": {
        "type": "object",
        "required": [
          "reason"
        ],
        "properties": {
          "reason": {
            "type": "string"
          }
        }
      },
      "OrderTaskProduct": {
        "type": "object",
        "properties": {
          "orderTaskID": {
            "type": "integer",
            "description": "The ID of the order task."
          },
          "orderID": {
            "type": "integer",
            "description": "The ID of the order."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe this task will follow."
          },
          "unitIncome": {
            "type": "integer",
            "description": "Gross Income per unit from this order task"
          },
          "status": {
            "type": "string",
            "description": "The status of the order task.",
            "enum": [
              "created",
              "inProgress",
              "done",
              "resolved"
            ]
          }
        }
      },
      "NewOrderTaskProduct": {
        "type": "object",
        "required": [
          "orderID",
          "recipeID",
          "productName",
          "quantity",
          "unitIncome"
        ],
        "properties": {
          "orderID": {
            "type": "integer",
            "description": "The ID of the order."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the product."
          },
          "unitIncome": {
            "type": "integer",
            "description": "The unit income of the product."
          }
        }
      },
      "NewClient": {
        "type": "object",
        "properties": {
          "nameFirst": {
            "type": "string"
          },
          "nameLast": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "AL",
              "AK",
              "AZ",
              "AR",
              "AS",
              "CA",
              "CO",
              "CT",
              "DE",
              "DC",
              "FL",
              "GA",
              "GU",
              "HI",
              "ID",
              "IL",
              "IN",
              "IA",
              "KS",
              "KY",
              "LA",
              "ME",
              "MD",
              "MA",
              "MI",
              "MN",
              "MS",
              "MO",
              "MT",
              "NE",
              "NV",
              "NH",
              "NJ",
              "NM",
              "NY",
              "NC",
              "ND",
              "MP",
              "OH",
              "OK",
              "OR",
              "PA",
              "PR",
              "RI",
              "SC",
              "SD",
              "TN",
              "TX",
              "TT",
              "UT",
              "VT",
              "VA",
              "VI",
              "WA",
              "WV",
              "WI",
              "WY"
            ]
          },
          "address2": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "NewClientResponse": {
        "type": "object",
        "properties": {
          "clientID": {
            "type": "integer"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "clientID": {
            "type": "integer"
          },
          "nameFirst": {
            "type": "string"
          },
          "nameLast": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "AL",
              "AK",
              "AZ",
              "AR",
              "AS",
              "CA",
              "CO",
              "CT",
              "DE",
              "DC",
              "FL",
              "GA",
              "GU",
              "HI",
              "ID",
              "IL",
              "IN",
              "IA",
              "KS",
              "KY",
              "LA",
              "ME",
              "MD",
              "MA",
              "MI",
              "MN",
              "MS",
              "MO",
              "MT",
              "NE",
              "NV",
              "NH",
              "NJ",
              "NM",
              "NY",
              "NC",
              "ND",
              "MP",
              "OH",
              "OK",
              "OR",
              "PA",
              "PR",
              "RI",
              "SC",
              "SD",
              "TN",
              "TX",
              "TT",
              "UT",
              "VT",
              "VA",
              "VI",
              "WA",
              "WV",
              "WI",
              "WY"
            ]
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "ClientUpdateRequest": {
        "type": "object",
        "properties": {
          "nameFirst": {
            "type": "string"
          },
          "nameLast": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "AL",
              "AK",
              "AZ",
              "AR",
              "AS",
              "CA",
              "CO",
              "CT",
              "DE",
              "DC",
              "FL",
              "GA",
              "GU",
              "HI",
              "ID",
              "IL",
              "IN",
              "IA",
              "KS",
              "KY",
              "LA",
              "ME",
              "MD",
              "MA",
              "MI",
              "MN",
              "MS",
              "MO",
              "MT",
              "NE",
              "NV",
              "NH",
              "NJ",
              "NM",
              "NY",
              "NC",
              "ND",
              "MP",
              "OH",
              "OK",
              "OR",
              "PA",
              "PR",
              "RI",
              "SC",
              "SD",
              "TN",
              "TX",
              "TT",
              "UT",
              "VT",
              "VA",
              "VI",
              "WA",
              "WV",
              "WI",
              "WY"
            ]
          },
          "phone": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          }
        }
      },
      "StateEnum": {
        "type": "string",
        "enum": [
          "AL",
          "AK",
          "AZ",
          "AR",
          "AS",
          "CA",
          "CO",
          "CT",
          "DE",
          "DC",
          "FL",
          "GA",
          "GU",
          "HI",
          "ID",
          "IL",
          "IN",
          "IA",
          "KS",
          "KY",
          "LA",
          "ME",
          "MD",
          "MA",
          "MI",
          "MN",
          "MS",
          "MO",
          "MT",
          "NE",
          "NV",
          "NH",
          "NJ",
          "NM",
          "NY",
          "NC",
          "ND",
          "MP",
          "OH",
          "OK",
          "OR",
          "PA",
          "PR",
          "RI",
          "SC",
          "SD",
          "TN",
          "TX",
          "TT",
          "UT",
          "VT",
          "VA",
          "VI",
          "WA",
          "WV",
          "WI",
          "WY"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "invoiceID": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "order"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "pending",
              "sent",
              "paymentPending",
              "paymentPartial",
              "paymentFull",
              "closed",
              "overdue",
              "void",
              "refunded",
              "disputed"
            ]
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "description": "The total billable amount for this invoice."
          },
          "taxesFees": {
            "type": "number",
            "format": "double",
            "description": "Taxes and Fees applied to subtotal."
          },
          "totalBillable": {
            "type": "number",
            "format": "double",
            "description": "Subtotal plus taxes and fees."
          }
        }
      },
      "NewInvoice": {
        "type": "object",
        "required": [
          "type",
          "status",
          "billableAmount"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "order"
            ],
            "description": "The type of the invoice."
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "pending",
              "sent",
              "paymentPending",
              "paymentPartial",
              "paymentFull",
              "closed",
              "overdue",
              "void",
              "refunded",
              "disputed"
            ],
            "description": "The status of the invoice."
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "description": "The total billable amount for this invoice."
          }
        }
      },
      "InvoicePatchInput": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "pending",
              "sent",
              "paymentPending",
              "paymentPartial",
              "paymentFull",
              "closed",
              "overdue",
              "void",
              "refunded",
              "disputed"
            ],
            "description": "The status of the invoice."
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "description": "The total billable amount for this invoice."
          }
        }
      },
      "NewInvoiceNote": {
        "type": "object",
        "required": [
          "invoiceID",
          "note"
        ],
        "properties": {
          "note": {
            "type": "string",
            "description": "The note for the invoice."
          }
        }
      },
      "InvoiceNote": {
        "type": "object",
        "properties": {
          "invoiceNoteID": {
            "type": "integer",
            "description": "The ID of the invoice note."
          },
          "invoiceID": {
            "type": "integer",
            "description": "The ID of the invoice."
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of the invoice note."
          },
          "note": {
            "type": "string",
            "description": "The note for the invoice."
          }
        }
      },
      "NewInvoiceLog": {
        "type": "object",
        "required": [
          "type",
          "log"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "created",
              "statusChange"
            ],
            "description": "The type of the invoice log."
          },
          "log": {
            "type": "string",
            "description": "The log for the invoice."
          }
        }
      },
      "InvoiceLog": {
        "type": "object",
        "properties": {
          "invoiceLogID": {
            "type": "integer",
            "description": "The ID of the invoice log."
          },
          "invoiceID": {
            "type": "integer",
            "description": "The ID of the invoice."
          },
          "type": {
            "type": "string",
            "enum": [
              "created",
              "statusChange"
            ],
            "description": "The type of the invoice log."
          },
          "log": {
            "type": "string",
            "description": "The log for the invoice."
          }
        }
      },
      "NewPayment": {
        "type": "object",
        "required": [
          "invoiceID",
          "method",
          "receivedTime"
        ],
        "properties": {
          "invoiceID": {
            "type": "integer",
            "description": "The ID of the invoice."
          },
          "method": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "digital"
            ],
            "description": "The payment method."
          },
          "receivedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the payment was received."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of this payment."
          }
        }
      },
      "Payment": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "integer",
            "description": "The ID of the payment."
          },
          "invoiceID": {
            "type": "integer",
            "description": "The ID of the invoice."
          },
          "method": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "digital"
            ],
            "description": "The payment method."
          },
          "receivedTime": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the payment was received."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of this payment."
          }
        }
      },
      "NewExpense": {
        "type": "object",
        "required": [
          "name",
          "description",
          "amount",
          "vendorSupplier",
          "method",
          "receiptID",
          "purchaser",
          "category"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The descriptive name of the expense."
          },
          "description": {
            "type": "string",
            "description": "The description of the expense."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The currency amount of the expense."
          },
          "vendorSupplier": {
            "type": "string",
            "description": "The vendor or supplier of the expense."
          },
          "method": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "digital",
              "check"
            ],
            "description": "The payment method for the expense."
          },
          "receiptID": {
            "type": "integer",
            "description": "The ID of the receipt associated with the expense."
          },
          "purchaser": {
            "type": "string",
            "description": "The purchaser or person responsible for the expense."
          },
          "category": {
            "type": "string",
            "enum": [
              "officeSupply",
              "stockIngredient",
              "Tools",
              "Software",
              "Parcel",
              "Travel",
              "Facilities",
              "Rent",
              "Marketing",
              "Other"
            ],
            "description": "The category of the expense."
          }
        }
      },
      "Expense": {
        "type": "object",
        "properties": {
          "expenseID": {
            "type": "integer",
            "description": "The ID of the expense."
          },
          "name": {
            "type": "string",
            "description": "The descriptive name of the expense."
          },
          "description": {
            "type": "string",
            "description": "The description of the expense."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The currency amount of the expense."
          },
          "vendorSupplier": {
            "type": "string",
            "description": "The vendor or supplier of the expense."
          },
          "method": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "digital",
              "check"
            ],
            "description": "The payment method for the expense."
          },
          "receiptID": {
            "type": "integer",
            "description": "The ID of the receipt associated with the expense."
          },
          "purchaser": {
            "type": "string",
            "description": "The purchaser or person responsible for the expense."
          },
          "category": {
            "type": "string",
            "enum": [
              "officeSupply",
              "stockIngredient",
              "Tools",
              "Software",
              "Parcel",
              "Travel",
              "Facilities",
              "Rent",
              "Marketing",
              "Other"
            ],
            "description": "The category of the expense."
          },
          "transactionDate": {
            "type": "string",
            "format": "date",
            "description": "The date of the expense transaction."
          },
          "createdTime": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the expense was created."
          }
        }
      },
      "ExpenseUpdate": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The updated description of the expense."
          },
          "transactionDate": {
            "type": "string",
            "format": "date",
            "description": "The updated transaction date of the expense."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The updated currency amount of the expense."
          },
          "vendorSupplier": {
            "type": "string",
            "description": "The updated vendor or supplier of the expense."
          },
          "method": {
            "type": "string",
            "enum": [
              "cash",
              "card",
              "digital",
              "check"
            ],
            "description": "The updated payment method for the expense."
          },
          "category": {
            "type": "string",
            "enum": [
              "officeSupply",
              "stockIngredient",
              "Tools",
              "Software",
              "Parcel",
              "Travel",
              "Facilities",
              "Rent",
              "Marketing",
              "Other"
            ],
            "description": "The updated category of the expense."
          },
          "purchaser": {
            "type": "string",
            "description": "The updated purchaser or person responsible for the expense."
          },
          "receiptID": {
            "type": "integer",
            "description": "The updated ID of the receipt associated with the expense."
          }
        }
      },
      "NewTag": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag."
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "tagID": {
            "type": "integer",
            "description": "The ID of the tag."
          },
          "name": {
            "type": "string",
            "description": "The name of the tag."
          }
        }
      },
      "NewOrderTag": {
        "type": "object",
        "required": [
          "orderID",
          "tagID"
        ],
        "properties": {
          "orderID": {
            "type": "integer",
            "description": "The ID of the order."
          },
          "tagID": {
            "type": "integer",
            "description": "The ID of the tag."
          }
        }
      },
      "OrderTag": {
        "type": "object",
        "properties": {
          "orderTagID": {
            "type": "integer",
            "description": "The ID of the order tag."
          },
          "orderID": {
            "type": "integer",
            "description": "The ID of the order."
          },
          "tagID": {
            "type": "integer",
            "description": "The ID of the tag."
          }
        }
      },
      "NewRecipeTag": {
        "type": "object",
        "required": [
          "recipeID",
          "tagID"
        ],
        "properties": {
          "orderID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "tagID": {
            "type": "integer",
            "description": "The ID of the tag."
          }
        }
      },
      "RecipeTag": {
        "type": "object",
        "properties": {
          "recipeTagID": {
            "type": "integer",
            "description": "The ID of the recipe tag."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "tagID": {
            "type": "integer",
            "description": "The ID of the tag."
          }
        }
      },
      "NewRecipe": {
        "type": "object",
        "required": [
          "title",
          "recipeCategoryID",
          "servings",
          "lifespanDays"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the recipe."
          },
          "recipeCategoryID": {
            "type": "integer",
            "description": "The ID of the recipe category."
          },
          "servings": {
            "type": "integer",
            "description": "The number of servings the recipe yields."
          },
          "lifespanDays": {
            "type": "integer",
            "description": "The lifespan of the recipe in days."
          }
        },
        "additionalProperties": false
      },
      "Recipe": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the recipe."
          },
          "recipeCategoryID": {
            "type": "integer",
            "description": "The ID of the recipe category."
          },
          "servings": {
            "type": "integer",
            "description": "The number of servings the recipe yields."
          },
          "lifespanDays": {
            "type": "integer",
            "description": "The lifespan of the recipe in days."
          }
        }
      },
      "RecipeUpdateInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The updated title of the recipe."
          },
          "servings": {
            "type": "integer",
            "description": "The updated number of servings the recipe yields."
          },
          "recipeCategoryID": {
            "type": "integer",
            "description": "The updated ID of the recipe category."
          },
          "lifespanDays": {
            "type": "integer",
            "description": "The updated lifespan of the recipe in days."
          }
        }
      },
      "NewRecipeComponent": {
        "type": "object",
        "required": [
          "recipeID",
          "componentID",
          "componentAdvanceDays"
        ],
        "properties": {
          "recipeID": {
            "type": "integer",
            "description": "The ID of the parent recipe."
          },
          "componentID": {
            "type": "integer",
            "description": "The ID of the component recipe."
          },
          "componentAdvanceDays": {
            "type": "integer",
            "description": "The number of days in advance this component can be prepared."
          }
        },
        "additionalProperties": false
      },
      "RecipeComponent": {
        "type": "object",
        "properties": {
          "recipeComponentID": {
            "type": "integer",
            "description": "The ID of the component."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the parent recipe."
          },
          "componentID": {
            "type": "integer",
            "description": "The ID of the component recipe."
          },
          "componentAdvanceDays": {
            "type": "integer",
            "description": "The number of days in advance this component can be prepared."
          }
        }
      },
      "RecipeComponentUpdateInput": {
        "type": "object",
        "properties": {
          "componentAdvanceDays": {
            "type": "integer",
            "description": "The updated number of days in advance to prepare the component."
          }
        }
      },
      "RecipeCategoryInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the recipe category."
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "RecipeCategory": {
        "type": "object",
        "properties": {
          "recipeCategoryID": {
            "type": "integer",
            "description": "The ID of the recipe category."
          },
          "name": {
            "type": "string",
            "description": "The name of the recipe category."
          }
        },
        "required": [
          "recipeCategoryID",
          "name"
        ],
        "additionalProperties": false
      },
      "NewStep": {
        "type": "object",
        "required": [
          "title",
          "description"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the step."
          },
          "description": {
            "type": "string",
            "description": "The description of the step."
          }
        },
        "additionalProperties": false
      },
      "Step": {
        "type": "object",
        "properties": {
          "stepID": {
            "type": "integer",
            "description": "The ID of the step."
          },
          "title": {
            "type": "string",
            "description": "The title of the step."
          },
          "description": {
            "type": "string",
            "description": "The description of the step."
          }
        }
      },
      "StepUpdateInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The updated title of the step."
          },
          "description": {
            "type": "string",
            "description": "The updated description of the step."
          }
        },
        "additionalProperties": false
      },
      "NewRecipeStep": {
        "type": "object",
        "required": [
          "recipeID",
          "stepID"
        ],
        "properties": {
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "stepID": {
            "type": "integer",
            "description": "The ID of the step."
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number of the recipe step."
          }
        },
        "additionalProperties": false
      },
      "RecipeStep": {
        "type": "object",
        "properties": {
          "recipeStepID": {
            "type": "integer",
            "description": "The ID of the recipe step."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "stepID": {
            "type": "integer",
            "description": "The ID of the step."
          },
          "sequence": {
            "type": "integer",
            "description": "The sequence number of the recipe step."
          }
        },
        "additionalProperties": false
      },
      "NewTool": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tool."
          }
        },
        "additionalProperties": false
      },
      "Tool": {
        "type": "object",
        "properties": {
          "toolID": {
            "type": "integer",
            "description": "The ID of the tool."
          },
          "name": {
            "type": "string",
            "description": "The name of the tool."
          }
        },
        "additionalProperties": false
      },
      "ToolUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The updated name of the tool."
          }
        },
        "additionalProperties": false
      },
      "NewRecipeTool": {
        "type": "object",
        "required": [
          "recipeID",
          "toolID",
          "quantity"
        ],
        "properties": {
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "toolID": {
            "type": "integer",
            "description": "The ID of the tool."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the tool for the recipe."
          }
        },
        "additionalProperties": false
      },
      "RecipeTool": {
        "type": "object",
        "properties": {
          "recipeToolID": {
            "type": "integer",
            "description": "The ID of the recipe tool."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "toolID": {
            "type": "integer",
            "description": "The ID of the tool."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the tool for the recipe."
          }
        },
        "additionalProperties": false
      },
      "RecipeToolUpdateInput": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "The updated quantity of the tool for the recipe."
          }
        },
        "additionalProperties": false
      },
      "NewToolStock": {
        "type": "object",
        "required": [
          "toolID",
          "purchasedBy",
          "purchaseDate",
          "quantity"
        ],
        "properties": {
          "toolID": {
            "type": "integer",
            "description": "The ID of the tool."
          },
          "purchasedBy": {
            "type": "string",
            "description": "The purchaser of the tool."
          },
          "purchaseDate": {
            "type": "string",
            "format": "date",
            "description": "The purchase date of the tool (YYYY-MM-DD)."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the tool purchased."
          }
        },
        "additionalProperties": false
      },
      "ToolStock": {
        "type": "object",
        "properties": {
          "toolStockID": {
            "type": "integer",
            "description": "The ID of the tool stock."
          },
          "toolID": {
            "type": "integer",
            "description": "The ID of the tool."
          },
          "purchasedBy": {
            "type": "string",
            "description": "The purchaser of the tool."
          },
          "purchaseDate": {
            "type": "string",
            "format": "date",
            "description": "The purchase date of the tool (YYYY-MM-DD)."
          },
          "quantity": {
            "type": "integer",
            "description": "The quantity of the tool purchased."
          }
        },
        "additionalProperties": false
      },
      "ToolStockUpdateInput": {
        "type": "object",
        "properties": {
          "quantity": {
            "type": "integer",
            "description": "The updated quantity of the tool stock."
          },
          "purchasedBy": {
            "type": "string",
            "description": "The updated purchaser of the tool stock."
          },
          "purchaseDate": {
            "type": "string",
            "format": "date",
            "description": "The updated purchase date of the tool stock (YYYY-MM-DD)."
          }
        },
        "additionalProperties": false
      },
      "NewIngredient": {
        "type": "object",
        "required": [
          "name",
          "lifespanDays"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ingredient."
          },
          "lifespanDays": {
            "type": "integer",
            "description": "The lifespan of the ingredient in days."
          }
        },
        "additionalProperties": false
      },
      "Ingredient": {
        "type": "object",
        "properties": {
          "ingredientID": {
            "type": "integer",
            "description": "The ID of the ingredient."
          },
          "name": {
            "type": "string",
            "description": "The name of the ingredient."
          },
          "lifespanDays": {
            "type": "integer",
            "description": "The lifespan of the ingredient in days."
          }
        },
        "additionalProperties": false
      },
      "IngredientUpdateInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The updated name of the ingredient."
          },
          "lifespanDays": {
            "type": "integer",
            "description": "The updated lifespan of the ingredient in days."
          }
        },
        "additionalProperties": false
      },
      "NewRecipeIngredient": {
        "type": "object",
        "required": [
          "recipeID",
          "ingredientID",
          "measurementUnit",
          "measurement"
        ],
        "properties": {
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "ingredientID": {
            "type": "integer",
            "description": "The ID of the ingredient."
          },
          "measurementUnit": {
            "type": "string",
            "description": "The measurement unit for the ingredient.",
            "enum": [
              "gram",
              "ounce",
              "pound",
              "teaspoon",
              "tablespoon",
              "cup",
              "quart",
              "gallon",
              "milliliter",
              "liter",
              "bags",
              "boxes",
              "cartons",
              "pallets",
              "bottles",
              "containers",
              "bunch",
              "dash"
            ]
          },
          "measurement": {
            "type": "integer",
            "description": "The measurement value for the ingredient."
          }
        },
        "additionalProperties": false
      },
      "RecipeIngredient": {
        "type": "object",
        "properties": {
          "recipeIngredientID": {
            "type": "integer",
            "description": "The ID of the recipe-ingredient pairing."
          },
          "recipeID": {
            "type": "integer",
            "description": "The ID of the recipe."
          },
          "ingredientID": {
            "type": "integer",
            "description": "The ID of the ingredient."
          },
          "measurementUnit": {
            "type": "string",
            "description": "The measurement unit for the ingredient."
          },
          "measurement": {
            "type": "integer",
            "description": "The measurement value for the ingredient."
          }
        },
        "additionalProperties": false
      },
      "RecipeIngredientUpdateInput": {
        "type": "object",
        "properties": {
          "measurementUnit": {
            "type": "string",
            "description": "The updated measurement unit for the recipe ingredient.",
            "enum": [
              "gram",
              "ounce",
              "pound",
              "teaspoon",
              "tablespoon",
              "cup",
              "quart",
              "gallon",
              "milliliter",
              "liter",
              "bags",
              "boxes",
              "cartons",
              "pallets",
              "bottles",
              "containers"
            ]
          },
          "measurement": {
            "type": "integer",
            "description": "The updated measurement value for the recipe ingredient."
          }
        },
        "additionalProperties": false
      },
      "NewIngredientStock": {
        "type": "object",
        "required": [
          "ingredientID",
          "measurementUnit",
          "measurement",
          "purchasedDate",
          "purchasedBy"
        ],
        "properties": {
          "ingredientID": {
            "type": "integer",
            "description": "The ID of the ingredient."
          },
          "measurementUnit": {
            "type": "string",
            "description": "The measurement unit for the ingredient stock.",
            "enum": [
              "gram",
              "ounce",
              "pound",
              "teaspoon",
              "tablespoon",
              "cup",
              "quart",
              "gallon",
              "milliliter",
              "liter",
              "bags",
              "boxes",
              "cartons",
              "pallets",
              "bottles",
              "containers"
            ]
          },
          "measurement": {
            "type": "integer",
            "description": "The measurement value for the ingredient stock."
          },
          "purchasedDate": {
            "type": "string",
            "format": "date",
            "description": "The purchased date of the ingredient stock (YYYY-MM-DD)."
          },
          "purchasedBy": {
            "type": "string",
            "description": "The purchaser of the ingredient stock."
          }
        },
        "additionalProperties": false
      },
      "IngredientStock": {
        "type": "object",
        "properties": {
          "ingredientStockID": {
            "type": "integer",
            "description": "The ID of the ingredient stock."
          },
          "ingredientID": {
            "type": "integer",
            "description": "The ID of the ingredient."
          },
          "measurementUnit": {
            "type": "string",
            "description": "The measurement unit for the ingredient stock."
          },
          "measurement": {
            "type": "integer",
            "description": "The measurement value for the ingredient stock."
          },
          "purchasedDate": {
            "type": "string",
            "format": "date",
            "description": "The purchased date of the ingredient stock (YYYY-MM-DD)."
          },
          "purchasedBy": {
            "type": "string",
            "description": "The purchaser of the ingredient stock."
          }
        },
        "additionalProperties": false
      },
      "IngredientStockUpdateInput": {
        "type": "object",
        "properties": {
          "measurementUnit": {
            "type": "string",
            "description": "The updated measurement unit for the ingredient stock.",
            "enum": [
              "gram",
              "ounce",
              "pound",
              "teaspoon",
              "tablespoon",
              "cup",
              "quart",
              "gallon",
              "milliliter",
              "liter",
              "bags",
              "boxes",
              "cartons",
              "pallets",
              "bottles",
              "containers"
            ]
          },
          "measurement": {
            "type": "integer",
            "description": "The updated measurement value for the ingredient stock."
          },
          "purchasedBy": {
            "type": "string",
            "description": "The updated purchaser of the ingredient stock."
          },
          "purchasedDate": {
            "type": "string",
            "format": "date",
            "description": "The updated purchased date of the ingredient stock (YYYY-MM-DD)."
          }
        },
        "additionalProperties": false
      },
      "IngredientStockDeleteInput": {
        "type": "object",
        "required": [
          "reason"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "description": "The reason for deleting the ingredient stock."
          }
        },
        "additionalProperties": false
      }
    }
  }
}